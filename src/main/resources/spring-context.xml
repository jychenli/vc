<?xml version="1.0" encoding="UTF-8"?>
<!-- <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd "
    default-lazy-init="true">
	
	Freemarker配置  

	<context:component-scan base-package="com.analytic.jmbi.module.resources.service" />
	    
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
  			<property name="templateLoaderPath" value="/page/"/>
  			 <property name="freemarkerSettings">
       		<props>
       			<prop key="default_encoding">UTF-8</prop>  
                <prop key="output_encoding">UTF-8</prop>  
                <prop key="locale">zh_CN</prop>  
                <prop key="date_format">yyyy-MM-dd</prop>  
                <prop key="time_format">HH:mm:ss</prop>  
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
       		</props>
       </property> 
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	  <property name="cache" value="false"/>
	  <property name="prefix" value=""/>
	  <property name="suffix" value=".html"/>
	   <property name="contentType"><value>text/html;charset=UTF-8</value></property>  
	</bean>
	
	  


	<context:component-scan base-package="com.analytic.jmbi">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	========================= Start of PERSISTENCE DEFINITIONS =========================
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				数据库配置
				<value>classpath*:/hibernate.properties</value>
			</list>
		</property>
	</bean>
	定义数据源
	Choose the dialect that matches your "dataSource" definition
	
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${hibernate.connection.driver_class}" />
		
		<property name="url" value="${hibernate.connection.url}"/>
		<property name="username" value="${hibernate.connection.username}" />
		<property name="password" value="${hibernate.connection.password}" />
		<property name="maxActive" value="${hibernate.connection.maxActive}" />连接池的最大活动个数
		<property name="maxIdle" value="${hibernate.connection.maxIdle}" />最大空闲数
		<property name="maxWait" value="${hibernate.connection.maxWait}"/>连接的最大等待时间,单位为毫秒		

		<property name="logAbandoned" value="true"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="7200"/>
		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
	</bean>

	<bean id="nativejdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />

	<bean id="oracleLobHandle" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor">
			<ref local="nativejdbcExtractor" />
		</property>
	</bean>
	和Hibernate联系起来
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name=" packagesToScan " value="  "></property>
		
		<property name="mappingResources">
			<list><value>classpath:/com/analytic/portal/module/system.model/SysUser</value></list>
		</property>
		<property name="mappingDirectoryLocations">
        	<list>
        		<value>classpath:/com/analytic/jmbi/module/**/model/</value>
        	</list>
        </property>
        
        <property name="annotatedClasses">
			<list>
				<value>com.analytic.jmbi.module.system.model.SysUser</value>
			</list>
		</property>
        
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
				
			</props>
		</property>
		<property name="lobHandler">
			<ref bean="oracleLobHandle" />
		</property>
	</bean>
	<bean id="iBaseDao" class="com.analytic.jmbi.module.common.dao.impl.BaseDaoImp">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="spring" class="com.analytic.jmbi.common.filter.SpringContextUtil" lazy-init="false"/>
	
	进行事务处理
	======================================= transactionManager ==================================
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	事务管理器配置,单数据源事务
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			对get/load/search开头的方法要求只读事务
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="show*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			对其它方法要求事务
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>	
		</tx:attributes >
	</tx:advice>
	
	<aop:config/> 的定义，确保由txAdvice bean定义的事务通知在应用中具体点被执行
	<aop:config>
	         在com.nevin.service包下面的所有对象拥有默认的事务语义 ，前面的*表示任意返回类型，倒数第二个表示任意类，第三个表示任意方法
	         <aop:pointcut id="ServiceMethods" 
	                             expression="execution(* com.analytic.jmbi.module.*.service.impl.*.*(..))"/>
	         用通知器advisor把txAdvice和执行事务语义的地方绑定在一起
	         <aop:advisor advice-ref="txAdvice" pointcut-ref="ServiceMethods" />
	 </aop:config>
	
	使Spring关注Annotation
	<context:annotation-config />
	  支持上传文件  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
	   <property name="resolveLazily" value="true"/>    
	     <property name="maxUploadSize">  
           <value>10485760</value>  
       </property>  
       <property name="maxInMemorySize">  
           <value>1024</value>  
        </property>  
         <property name="defaultEncoding">  
           <value>UTF-8</value>  
        </property>  
	
	</bean>
	

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		
	</bean>
	

		
	<bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">  
    	
	    <property name="messageSender">  
	        <bean class="org.springframework.ws.transport.http.HttpComponentsMessageSender"/>  
	    </property>  
    	<property name="defaultUri" value="http://cmail.cyou-inc.com/service/DirectMailService"/>  

	</bean>  
	
	
	
	 <import resource="applicationContext-cache.xml" />
	analytic/portal
 -->
 
 <beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="cc.chli.vc.service" /> 
  
    <import resource="spring-profile.xml"/>
    <import resource="spring-mybatis.xml"/>
 	<import resource="spring-server.xml"/>
 </beans>
